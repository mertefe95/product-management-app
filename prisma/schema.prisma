// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProductStatus {
  DRAFT
  PROPOSED
  PUBLISHED
  REJECTED
}

model ProductImage {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  url       String
}

model ProductOption {
  id Int @id @default(autoincrement())

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  title String

  product   Product              @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  values    ProductOptionValue[]
}

model ProductOptionValue {
  id Int @id @default(autoincrement())

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  value String

  option    ProductOption   @relation(fields: [optionId], references: [id], onDelete: Cascade)
  optionId  Int
  variant   ProductVariant @relation(fields: [variantId], references: [id], onDelete: Cascade)
  variantId Int

   @@unique([value,optionId, variantId], name: "value_optionId_variantId") // <-- this is the unique constraint
}

model ProductVariant {
  id Int @id @default(autoincrement())

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  title String
  price     Decimal    @default(0) @db.Decimal(12, 2)

  sku               String?
  barcode           String?
  ean               String?
  upc               String?
  variantRank       Int     @default(0)
  inventoryQuantity Int

  allowBackorder  Boolean @default(false)
  manageInventory Boolean @default(true)
  originCountry   String?
  midCode         String?
  material        String?

  weight Int?
  length Int?
  width  Int?
  hsCode String?

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int

  options ProductOptionValue[]
}

model ProductCollection {
  id Int @id @default(autoincrement())

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  title  String
  handle String

  products Product[]
}

model ProductType {
  id Int @id @default(autoincrement())

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  value    String
  products Product[]
}

model ProductTag {
  id Int @id @default(autoincrement())

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  value     String
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?
}

model Product {
  id Int @id @default(autoincrement())

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  title       String
  subtitle    String?
  description String?
  handle      String?
  isGiftcard  Boolean       @default(false)
  status      ProductStatus @default(DRAFT)
  thumbnail   String?

  options  ProductOption[]
  variants ProductVariant[]
  tags     ProductTag[]

  collection   ProductCollection? @relation(fields: [collectionId], references: [id])
  collectionId Int?

  type   ProductType? @relation(fields: [typeId], references: [id])
  typeId Int?

  externalId   String?
  discountable Boolean @default(true)
}
